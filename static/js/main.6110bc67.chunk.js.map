{"version":3,"sources":["App.tsx","index.tsx"],"names":["account","ethereum","window","imToken","alert","s","callAPI","JSON","stringify","EOA_ADDRESS","substring","toLowerCase","alertErr","err","message","eth_requestAccounts","request","method","then","accounts","catch","eth_Approve_EOA","data","params","from","to","gas","gasPrice","Number","toString","result","methods","func","name","code","App","className","map","onClick","rootElement","document","getElementById","render"],"mappings":"4IAmBIA,E,qBATEC,EAAWC,OAAOD,SAClBE,EAAUD,OAAOC,QAEjBC,EAAQD,EACV,SAAUE,GACRF,EAAQG,QAAQ,mBAAoBC,KAAKC,UAAUH,KAErDH,OAAOE,MAKLK,EAFK,6CAEYC,UAAU,GAAGC,cAE9BC,EAAW,SAACC,GAChBT,EAAMS,EAAIC,UAGNC,EAAsB,WAC1B,OAAOd,EACJe,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,GACLnB,EAAUmB,EAAS,GACnBf,EAAMJ,MAEPoB,MAAMR,IAGLS,EAAkB,WACtB,IAAMC,EAAI,4CAAwCb,EAAxC,oEACJc,EAAS,CACb,CACEC,KAAMxB,EACNyB,GAtBM,6CAuBNH,OACAI,IAAK,SACLC,SAAUC,OAAO,KAAYC,SAAS,MAI1C5B,EACGe,QAAQ,CACPC,OAAQ,sBACRM,WAEDL,MAAK,SAACY,GACL1B,EAAM0B,MAEPV,MAAMR,IAGLmB,EAAU,CACd,CACEC,KAAMjB,EACNkB,KAAM,sBACNC,KAAMnB,EAAoBc,YAE5B,CACEG,KAAMX,EACNY,KAAM,kBACNC,KAAMb,EAAgBQ,aAIX,SAASM,IACtB,OACE,qBAAKC,UAAU,MAAf,SACGL,EAAQM,KAAI,SAAApB,GACX,OACE,kCACE,wBAAQqB,QAASrB,EAAOe,KAAxB,SAA+Bf,EAAOgB,QAD1BhB,EAAOgB,WC3E/B,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACP,EAAD,IAASI,I","file":"static/js/main.6110bc67.chunk.js","sourcesContent":["import './styles.css'\n\ndeclare global {\n  interface Window {\n    ethereum: any\n    imToken: any\n    tronWeb: any\n  }\n}\n\nconst ethereum = window.ethereum\nconst imToken = window.imToken\n\nconst alert = imToken\n  ? function (s: string) {\n      imToken.callAPI('native.toastInfo', JSON.stringify(s))\n    }\n  : window.alert\n\nlet account: string\nconst to = '0x69252f0a46d41fD2A4172951f18dfD9E0B40DF88'\nconst lon = '0xdf41c31bbe17fafab4b5a172faaa5755aac772f0'\nconst EOA_ADDRESS = to.substring(2).toLowerCase()\n\nconst alertErr = (err: Error) => {\n  alert(err.message)\n}\n\nconst eth_requestAccounts = () => {\n  return ethereum\n    .request({ method: 'eth_requestAccounts' })\n    .then((accounts: any) => {\n      account = accounts[0]\n      alert(account)\n    })\n    .catch(alertErr)\n}\n\nconst eth_Approve_EOA = () => {\n  const data = `0x095ea7b3000000000000000000000000${EOA_ADDRESS}ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff`\n  const params = [\n    {\n      from: account,\n      to: lon,\n      data,\n      gas: '210000',\n      gasPrice: Number(5000000000).toString(16),\n    },\n  ]\n\n  ethereum\n    .request({\n      method: 'eth_sendTransaction',\n      params,\n    })\n    .then((result: any) => {\n      alert(result)\n    })\n    .catch(alertErr)\n}\n\nconst methods = [\n  {\n    func: eth_requestAccounts,\n    name: 'eth_requestAccounts',\n    code: eth_requestAccounts.toString(),\n  },\n  {\n    func: eth_Approve_EOA,\n    name: 'eth_Approve_EOA',\n    code: eth_Approve_EOA.toString(),\n  },\n]\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      {methods.map(method => {\n        return (\n          <section key={method.name}>\n            <button onClick={method.func}>{method.name}</button>\n          </section>\n        )\n      })}\n    </div>\n  )\n}\n","import { render } from 'react-dom'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nrender(<App />, rootElement)\n"],"sourceRoot":""}